#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SHOPMOON_NET")]
	public partial class databaseDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCart(Cart instance);
    partial void UpdateCart(Cart instance);
    partial void DeleteCart(Cart instance);
    partial void InsertProductType(ProductType instance);
    partial void UpdateProductType(ProductType instance);
    partial void DeleteProductType(ProductType instance);
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    partial void InsertCustomerStatus(CustomerStatus instance);
    partial void UpdateCustomerStatus(CustomerStatus instance);
    partial void DeleteCustomerStatus(CustomerStatus instance);
    partial void InsertCustomerType(CustomerType instance);
    partial void UpdateCustomerType(CustomerType instance);
    partial void DeleteCustomerType(CustomerType instance);
    partial void InsertEmployee(Employee instance);
    partial void UpdateEmployee(Employee instance);
    partial void DeleteEmployee(Employee instance);
    partial void InsertEmployeesRole(EmployeesRole instance);
    partial void UpdateEmployeesRole(EmployeesRole instance);
    partial void DeleteEmployeesRole(EmployeesRole instance);
    partial void InsertNhapHang(NhapHang instance);
    partial void UpdateNhapHang(NhapHang instance);
    partial void DeleteNhapHang(NhapHang instance);
    partial void InsertOrder(Order instance);
    partial void UpdateOrder(Order instance);
    partial void DeleteOrder(Order instance);
    partial void InsertProducer(Producer instance);
    partial void UpdateProducer(Producer instance);
    partial void DeleteProducer(Producer instance);
    partial void InsertProducerType(ProducerType instance);
    partial void UpdateProducerType(ProducerType instance);
    partial void DeleteProducerType(ProducerType instance);
    partial void InsertProduct(Product instance);
    partial void UpdateProduct(Product instance);
    partial void DeleteProduct(Product instance);
    #endregion
		
		public databaseDataContext() : 
				base(global::DAL.Properties.Settings.Default.SHOPMOON_NETConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public databaseDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public databaseDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public databaseDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public databaseDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Cart> Carts
		{
			get
			{
				return this.GetTable<Cart>();
			}
		}
		
		public System.Data.Linq.Table<ProductType> ProductTypes
		{
			get
			{
				return this.GetTable<ProductType>();
			}
		}
		
		public System.Data.Linq.Table<Customer> Customers
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
		
		public System.Data.Linq.Table<CustomerStatus> CustomerStatus
		{
			get
			{
				return this.GetTable<CustomerStatus>();
			}
		}
		
		public System.Data.Linq.Table<CustomerType> CustomerTypes
		{
			get
			{
				return this.GetTable<CustomerType>();
			}
		}
		
		public System.Data.Linq.Table<Employee> Employees
		{
			get
			{
				return this.GetTable<Employee>();
			}
		}
		
		public System.Data.Linq.Table<EmployeesRole> EmployeesRoles
		{
			get
			{
				return this.GetTable<EmployeesRole>();
			}
		}
		
		public System.Data.Linq.Table<NhapHang> NhapHangs
		{
			get
			{
				return this.GetTable<NhapHang>();
			}
		}
		
		public System.Data.Linq.Table<Order> Orders
		{
			get
			{
				return this.GetTable<Order>();
			}
		}
		
		public System.Data.Linq.Table<Producer> Producers
		{
			get
			{
				return this.GetTable<Producer>();
			}
		}
		
		public System.Data.Linq.Table<ProducerType> ProducerTypes
		{
			get
			{
				return this.GetTable<ProducerType>();
			}
		}
		
		public System.Data.Linq.Table<Product> Products
		{
			get
			{
				return this.GetTable<Product>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cart")]
	public partial class Cart : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _catID;
		
		private System.Nullable<int> _proID;
		
		private System.Nullable<int> _proPrice;
		
		private System.Nullable<int> _cartQuantity;
		
		private System.Nullable<int> _cartMoney;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncatIDChanging(int value);
    partial void OncatIDChanged();
    partial void OnproIDChanging(System.Nullable<int> value);
    partial void OnproIDChanged();
    partial void OnproPriceChanging(System.Nullable<int> value);
    partial void OnproPriceChanged();
    partial void OncartQuantityChanging(System.Nullable<int> value);
    partial void OncartQuantityChanged();
    partial void OncartMoneyChanging(System.Nullable<int> value);
    partial void OncartMoneyChanged();
    #endregion
		
		public Cart()
		{
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_catID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int catID
		{
			get
			{
				return this._catID;
			}
			set
			{
				if ((this._catID != value))
				{
					this.OncatIDChanging(value);
					this.SendPropertyChanging();
					this._catID = value;
					this.SendPropertyChanged("catID");
					this.OncatIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proID", DbType="Int")]
		public System.Nullable<int> proID
		{
			get
			{
				return this._proID;
			}
			set
			{
				if ((this._proID != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproIDChanging(value);
					this.SendPropertyChanging();
					this._proID = value;
					this.SendPropertyChanged("proID");
					this.OnproIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proPrice", DbType="Int")]
		public System.Nullable<int> proPrice
		{
			get
			{
				return this._proPrice;
			}
			set
			{
				if ((this._proPrice != value))
				{
					this.OnproPriceChanging(value);
					this.SendPropertyChanging();
					this._proPrice = value;
					this.SendPropertyChanged("proPrice");
					this.OnproPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cartQuantity", DbType="Int")]
		public System.Nullable<int> cartQuantity
		{
			get
			{
				return this._cartQuantity;
			}
			set
			{
				if ((this._cartQuantity != value))
				{
					this.OncartQuantityChanging(value);
					this.SendPropertyChanging();
					this._cartQuantity = value;
					this.SendPropertyChanged("cartQuantity");
					this.OncartQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cartMoney", DbType="Int")]
		public System.Nullable<int> cartMoney
		{
			get
			{
				return this._cartMoney;
			}
			set
			{
				if ((this._cartMoney != value))
				{
					this.OncartMoneyChanging(value);
					this.SendPropertyChanging();
					this._cartMoney = value;
					this.SendPropertyChanged("cartMoney");
					this.OncartMoneyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Cart", Storage="_Product", ThisKey="proID", OtherKey="proID", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.Carts.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.Carts.Add(this);
						this._proID = value.proID;
					}
					else
					{
						this._proID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductType")]
	public partial class ProductType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _proType;
		
		private string _proTypeName;
		
		private EntitySet<Product> _Products;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnproTypeChanging(int value);
    partial void OnproTypeChanged();
    partial void OnproTypeNameChanging(string value);
    partial void OnproTypeNameChanged();
    #endregion
		
		public ProductType()
		{
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proType", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int proType
		{
			get
			{
				return this._proType;
			}
			set
			{
				if ((this._proType != value))
				{
					this.OnproTypeChanging(value);
					this.SendPropertyChanging();
					this._proType = value;
					this.SendPropertyChanged("proType");
					this.OnproTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proTypeName", DbType="NVarChar(50)")]
		public string proTypeName
		{
			get
			{
				return this._proTypeName;
			}
			set
			{
				if ((this._proTypeName != value))
				{
					this.OnproTypeNameChanging(value);
					this.SendPropertyChanging();
					this._proTypeName = value;
					this.SendPropertyChanged("proTypeName");
					this.OnproTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductType_Product", Storage="_Products", ThisKey="proType", OtherKey="proType")]
		public EntitySet<Product> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.ProductType = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.ProductType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customers")]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _cusID;
		
		private string _cusName;
		
		private string _cusEmail;
		
		private string _cusPhone;
		
		private System.Nullable<int> _cusType;
		
		private System.Nullable<int> _cusStatus;
		
		private EntityRef<CustomerStatus> _CustomerStatus;
		
		private EntityRef<CustomerType> _CustomerType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncusIDChanging(int value);
    partial void OncusIDChanged();
    partial void OncusNameChanging(string value);
    partial void OncusNameChanged();
    partial void OncusEmailChanging(string value);
    partial void OncusEmailChanged();
    partial void OncusPhoneChanging(string value);
    partial void OncusPhoneChanged();
    partial void OncusTypeChanging(System.Nullable<int> value);
    partial void OncusTypeChanged();
    partial void OncusStatusChanging(System.Nullable<int> value);
    partial void OncusStatusChanged();
    #endregion
		
		public Customer()
		{
			this._CustomerStatus = default(EntityRef<CustomerStatus>);
			this._CustomerType = default(EntityRef<CustomerType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cusID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int cusID
		{
			get
			{
				return this._cusID;
			}
			set
			{
				if ((this._cusID != value))
				{
					this.OncusIDChanging(value);
					this.SendPropertyChanging();
					this._cusID = value;
					this.SendPropertyChanged("cusID");
					this.OncusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cusName", DbType="NVarChar(MAX)")]
		public string cusName
		{
			get
			{
				return this._cusName;
			}
			set
			{
				if ((this._cusName != value))
				{
					this.OncusNameChanging(value);
					this.SendPropertyChanging();
					this._cusName = value;
					this.SendPropertyChanged("cusName");
					this.OncusNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cusEmail", DbType="NChar(100)")]
		public string cusEmail
		{
			get
			{
				return this._cusEmail;
			}
			set
			{
				if ((this._cusEmail != value))
				{
					this.OncusEmailChanging(value);
					this.SendPropertyChanging();
					this._cusEmail = value;
					this.SendPropertyChanged("cusEmail");
					this.OncusEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cusPhone", DbType="NChar(11)")]
		public string cusPhone
		{
			get
			{
				return this._cusPhone;
			}
			set
			{
				if ((this._cusPhone != value))
				{
					this.OncusPhoneChanging(value);
					this.SendPropertyChanging();
					this._cusPhone = value;
					this.SendPropertyChanged("cusPhone");
					this.OncusPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cusType", DbType="Int")]
		public System.Nullable<int> cusType
		{
			get
			{
				return this._cusType;
			}
			set
			{
				if ((this._cusType != value))
				{
					if (this._CustomerType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncusTypeChanging(value);
					this.SendPropertyChanging();
					this._cusType = value;
					this.SendPropertyChanged("cusType");
					this.OncusTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cusStatus", DbType="Int")]
		public System.Nullable<int> cusStatus
		{
			get
			{
				return this._cusStatus;
			}
			set
			{
				if ((this._cusStatus != value))
				{
					if (this._CustomerStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncusStatusChanging(value);
					this.SendPropertyChanging();
					this._cusStatus = value;
					this.SendPropertyChanged("cusStatus");
					this.OncusStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerStatus_Customer", Storage="_CustomerStatus", ThisKey="cusStatus", OtherKey="cusStatus", IsForeignKey=true)]
		public CustomerStatus CustomerStatus
		{
			get
			{
				return this._CustomerStatus.Entity;
			}
			set
			{
				CustomerStatus previousValue = this._CustomerStatus.Entity;
				if (((previousValue != value) 
							|| (this._CustomerStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerStatus.Entity = null;
						previousValue.Customers.Remove(this);
					}
					this._CustomerStatus.Entity = value;
					if ((value != null))
					{
						value.Customers.Add(this);
						this._cusStatus = value.cusStatus;
					}
					else
					{
						this._cusStatus = default(Nullable<int>);
					}
					this.SendPropertyChanged("CustomerStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerType_Customer", Storage="_CustomerType", ThisKey="cusType", OtherKey="cusType", IsForeignKey=true)]
		public CustomerType CustomerType
		{
			get
			{
				return this._CustomerType.Entity;
			}
			set
			{
				CustomerType previousValue = this._CustomerType.Entity;
				if (((previousValue != value) 
							|| (this._CustomerType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerType.Entity = null;
						previousValue.Customers.Remove(this);
					}
					this._CustomerType.Entity = value;
					if ((value != null))
					{
						value.Customers.Add(this);
						this._cusType = value.cusType;
					}
					else
					{
						this._cusType = default(Nullable<int>);
					}
					this.SendPropertyChanged("CustomerType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerStatus")]
	public partial class CustomerStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _cusStatus;
		
		private string _cusStatusName;
		
		private EntitySet<Customer> _Customers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncusStatusChanging(int value);
    partial void OncusStatusChanged();
    partial void OncusStatusNameChanging(string value);
    partial void OncusStatusNameChanged();
    #endregion
		
		public CustomerStatus()
		{
			this._Customers = new EntitySet<Customer>(new Action<Customer>(this.attach_Customers), new Action<Customer>(this.detach_Customers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cusStatus", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int cusStatus
		{
			get
			{
				return this._cusStatus;
			}
			set
			{
				if ((this._cusStatus != value))
				{
					this.OncusStatusChanging(value);
					this.SendPropertyChanging();
					this._cusStatus = value;
					this.SendPropertyChanged("cusStatus");
					this.OncusStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cusStatusName", DbType="NVarChar(50)")]
		public string cusStatusName
		{
			get
			{
				return this._cusStatusName;
			}
			set
			{
				if ((this._cusStatusName != value))
				{
					this.OncusStatusNameChanging(value);
					this.SendPropertyChanging();
					this._cusStatusName = value;
					this.SendPropertyChanged("cusStatusName");
					this.OncusStatusNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerStatus_Customer", Storage="_Customers", ThisKey="cusStatus", OtherKey="cusStatus")]
		public EntitySet<Customer> Customers
		{
			get
			{
				return this._Customers;
			}
			set
			{
				this._Customers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.CustomerStatus = this;
		}
		
		private void detach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.CustomerStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerType")]
	public partial class CustomerType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _cusType;
		
		private string _cusTypeName;
		
		private EntitySet<Customer> _Customers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncusTypeChanging(int value);
    partial void OncusTypeChanged();
    partial void OncusTypeNameChanging(string value);
    partial void OncusTypeNameChanged();
    #endregion
		
		public CustomerType()
		{
			this._Customers = new EntitySet<Customer>(new Action<Customer>(this.attach_Customers), new Action<Customer>(this.detach_Customers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cusType", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int cusType
		{
			get
			{
				return this._cusType;
			}
			set
			{
				if ((this._cusType != value))
				{
					this.OncusTypeChanging(value);
					this.SendPropertyChanging();
					this._cusType = value;
					this.SendPropertyChanged("cusType");
					this.OncusTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cusTypeName", DbType="NVarChar(50)")]
		public string cusTypeName
		{
			get
			{
				return this._cusTypeName;
			}
			set
			{
				if ((this._cusTypeName != value))
				{
					this.OncusTypeNameChanging(value);
					this.SendPropertyChanging();
					this._cusTypeName = value;
					this.SendPropertyChanged("cusTypeName");
					this.OncusTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerType_Customer", Storage="_Customers", ThisKey="cusType", OtherKey="cusType")]
		public EntitySet<Customer> Customers
		{
			get
			{
				return this._Customers;
			}
			set
			{
				this._Customers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.CustomerType = this;
		}
		
		private void detach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.CustomerType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employees")]
	public partial class Employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _empID;
		
		private string _empName;
		
		private System.Nullable<System.DateTime> _empDate;
		
		private string _empPhoto;
		
		private string _empAddress;
		
		private System.Nullable<int> _empSalary;
		
		private System.Nullable<int> _empBonus;
		
		private System.Nullable<System.DateTime> _empStartTime;
		
		private string _empEmail;
		
		private string _empPhone;
		
		private string _empPassword;
		
		private System.Nullable<int> _empRole;
		
		private EntityRef<EmployeesRole> _EmployeesRole;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnempIDChanging(int value);
    partial void OnempIDChanged();
    partial void OnempNameChanging(string value);
    partial void OnempNameChanged();
    partial void OnempDateChanging(System.Nullable<System.DateTime> value);
    partial void OnempDateChanged();
    partial void OnempPhotoChanging(string value);
    partial void OnempPhotoChanged();
    partial void OnempAddressChanging(string value);
    partial void OnempAddressChanged();
    partial void OnempSalaryChanging(System.Nullable<int> value);
    partial void OnempSalaryChanged();
    partial void OnempBonusChanging(System.Nullable<int> value);
    partial void OnempBonusChanged();
    partial void OnempStartTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnempStartTimeChanged();
    partial void OnempEmailChanging(string value);
    partial void OnempEmailChanged();
    partial void OnempPhoneChanging(string value);
    partial void OnempPhoneChanged();
    partial void OnempPasswordChanging(string value);
    partial void OnempPasswordChanged();
    partial void OnempRoleChanging(System.Nullable<int> value);
    partial void OnempRoleChanged();
    #endregion
		
		public Employee()
		{
			this._EmployeesRole = default(EntityRef<EmployeesRole>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_empID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int empID
		{
			get
			{
				return this._empID;
			}
			set
			{
				if ((this._empID != value))
				{
					this.OnempIDChanging(value);
					this.SendPropertyChanging();
					this._empID = value;
					this.SendPropertyChanged("empID");
					this.OnempIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_empName", DbType="NVarChar(50)")]
		public string empName
		{
			get
			{
				return this._empName;
			}
			set
			{
				if ((this._empName != value))
				{
					this.OnempNameChanging(value);
					this.SendPropertyChanging();
					this._empName = value;
					this.SendPropertyChanged("empName");
					this.OnempNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_empDate", DbType="Date")]
		public System.Nullable<System.DateTime> empDate
		{
			get
			{
				return this._empDate;
			}
			set
			{
				if ((this._empDate != value))
				{
					this.OnempDateChanging(value);
					this.SendPropertyChanging();
					this._empDate = value;
					this.SendPropertyChanged("empDate");
					this.OnempDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_empPhoto", DbType="Char(100)")]
		public string empPhoto
		{
			get
			{
				return this._empPhoto;
			}
			set
			{
				if ((this._empPhoto != value))
				{
					this.OnempPhotoChanging(value);
					this.SendPropertyChanging();
					this._empPhoto = value;
					this.SendPropertyChanged("empPhoto");
					this.OnempPhotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_empAddress", DbType="NVarChar(MAX)")]
		public string empAddress
		{
			get
			{
				return this._empAddress;
			}
			set
			{
				if ((this._empAddress != value))
				{
					this.OnempAddressChanging(value);
					this.SendPropertyChanging();
					this._empAddress = value;
					this.SendPropertyChanged("empAddress");
					this.OnempAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_empSalary", DbType="Int")]
		public System.Nullable<int> empSalary
		{
			get
			{
				return this._empSalary;
			}
			set
			{
				if ((this._empSalary != value))
				{
					this.OnempSalaryChanging(value);
					this.SendPropertyChanging();
					this._empSalary = value;
					this.SendPropertyChanged("empSalary");
					this.OnempSalaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_empBonus", DbType="Int")]
		public System.Nullable<int> empBonus
		{
			get
			{
				return this._empBonus;
			}
			set
			{
				if ((this._empBonus != value))
				{
					this.OnempBonusChanging(value);
					this.SendPropertyChanging();
					this._empBonus = value;
					this.SendPropertyChanged("empBonus");
					this.OnempBonusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_empStartTime", DbType="Date")]
		public System.Nullable<System.DateTime> empStartTime
		{
			get
			{
				return this._empStartTime;
			}
			set
			{
				if ((this._empStartTime != value))
				{
					this.OnempStartTimeChanging(value);
					this.SendPropertyChanging();
					this._empStartTime = value;
					this.SendPropertyChanged("empStartTime");
					this.OnempStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_empEmail", DbType="Char(100)")]
		public string empEmail
		{
			get
			{
				return this._empEmail;
			}
			set
			{
				if ((this._empEmail != value))
				{
					this.OnempEmailChanging(value);
					this.SendPropertyChanging();
					this._empEmail = value;
					this.SendPropertyChanged("empEmail");
					this.OnempEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_empPhone", DbType="Char(10)")]
		public string empPhone
		{
			get
			{
				return this._empPhone;
			}
			set
			{
				if ((this._empPhone != value))
				{
					this.OnempPhoneChanging(value);
					this.SendPropertyChanging();
					this._empPhone = value;
					this.SendPropertyChanged("empPhone");
					this.OnempPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_empPassword", DbType="NChar(100)")]
		public string empPassword
		{
			get
			{
				return this._empPassword;
			}
			set
			{
				if ((this._empPassword != value))
				{
					this.OnempPasswordChanging(value);
					this.SendPropertyChanging();
					this._empPassword = value;
					this.SendPropertyChanged("empPassword");
					this.OnempPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_empRole", DbType="Int")]
		public System.Nullable<int> empRole
		{
			get
			{
				return this._empRole;
			}
			set
			{
				if ((this._empRole != value))
				{
					if (this._EmployeesRole.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnempRoleChanging(value);
					this.SendPropertyChanging();
					this._empRole = value;
					this.SendPropertyChanged("empRole");
					this.OnempRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EmployeesRole_Employee", Storage="_EmployeesRole", ThisKey="empRole", OtherKey="empRole", IsForeignKey=true)]
		public EmployeesRole EmployeesRole
		{
			get
			{
				return this._EmployeesRole.Entity;
			}
			set
			{
				EmployeesRole previousValue = this._EmployeesRole.Entity;
				if (((previousValue != value) 
							|| (this._EmployeesRole.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmployeesRole.Entity = null;
						previousValue.Employees.Remove(this);
					}
					this._EmployeesRole.Entity = value;
					if ((value != null))
					{
						value.Employees.Add(this);
						this._empRole = value.empRole;
					}
					else
					{
						this._empRole = default(Nullable<int>);
					}
					this.SendPropertyChanged("EmployeesRole");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmployeesRole")]
	public partial class EmployeesRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _empRole;
		
		private string _empRoleName;
		
		private EntitySet<Employee> _Employees;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnempRoleChanging(int value);
    partial void OnempRoleChanged();
    partial void OnempRoleNameChanging(string value);
    partial void OnempRoleNameChanged();
    #endregion
		
		public EmployeesRole()
		{
			this._Employees = new EntitySet<Employee>(new Action<Employee>(this.attach_Employees), new Action<Employee>(this.detach_Employees));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_empRole", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int empRole
		{
			get
			{
				return this._empRole;
			}
			set
			{
				if ((this._empRole != value))
				{
					this.OnempRoleChanging(value);
					this.SendPropertyChanging();
					this._empRole = value;
					this.SendPropertyChanged("empRole");
					this.OnempRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_empRoleName", DbType="NVarChar(50)")]
		public string empRoleName
		{
			get
			{
				return this._empRoleName;
			}
			set
			{
				if ((this._empRoleName != value))
				{
					this.OnempRoleNameChanging(value);
					this.SendPropertyChanging();
					this._empRoleName = value;
					this.SendPropertyChanged("empRoleName");
					this.OnempRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EmployeesRole_Employee", Storage="_Employees", ThisKey="empRole", OtherKey="empRole")]
		public EntitySet<Employee> Employees
		{
			get
			{
				return this._Employees;
			}
			set
			{
				this._Employees.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.EmployeesRole = this;
		}
		
		private void detach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.EmployeesRole = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhapHang")]
	public partial class NhapHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _orderID;
		
		private int _proID;
		
		private string _proName;
		
		private string _hangsanxuat;
		
		private int _orderQuantity;
		
		private int _dongia;
		
		private int _tongtien;
		
		private System.DateTime _ngaynhap;
		
		private System.DateTime _ngaynhan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnorderIDChanging(int value);
    partial void OnorderIDChanged();
    partial void OnproIDChanging(int value);
    partial void OnproIDChanged();
    partial void OnproNameChanging(string value);
    partial void OnproNameChanged();
    partial void OnhangsanxuatChanging(string value);
    partial void OnhangsanxuatChanged();
    partial void OnorderQuantityChanging(int value);
    partial void OnorderQuantityChanged();
    partial void OndongiaChanging(int value);
    partial void OndongiaChanged();
    partial void OntongtienChanging(int value);
    partial void OntongtienChanged();
    partial void OnngaynhapChanging(System.DateTime value);
    partial void OnngaynhapChanged();
    partial void OnngaynhanChanging(System.DateTime value);
    partial void OnngaynhanChanged();
    #endregion
		
		public NhapHang()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_orderID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int orderID
		{
			get
			{
				return this._orderID;
			}
			set
			{
				if ((this._orderID != value))
				{
					this.OnorderIDChanging(value);
					this.SendPropertyChanging();
					this._orderID = value;
					this.SendPropertyChanged("orderID");
					this.OnorderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proID", DbType="Int NOT NULL")]
		public int proID
		{
			get
			{
				return this._proID;
			}
			set
			{
				if ((this._proID != value))
				{
					this.OnproIDChanging(value);
					this.SendPropertyChanging();
					this._proID = value;
					this.SendPropertyChanged("proID");
					this.OnproIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string proName
		{
			get
			{
				return this._proName;
			}
			set
			{
				if ((this._proName != value))
				{
					this.OnproNameChanging(value);
					this.SendPropertyChanging();
					this._proName = value;
					this.SendPropertyChanged("proName");
					this.OnproNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hangsanxuat", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string hangsanxuat
		{
			get
			{
				return this._hangsanxuat;
			}
			set
			{
				if ((this._hangsanxuat != value))
				{
					this.OnhangsanxuatChanging(value);
					this.SendPropertyChanging();
					this._hangsanxuat = value;
					this.SendPropertyChanged("hangsanxuat");
					this.OnhangsanxuatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_orderQuantity", DbType="Int NOT NULL")]
		public int orderQuantity
		{
			get
			{
				return this._orderQuantity;
			}
			set
			{
				if ((this._orderQuantity != value))
				{
					this.OnorderQuantityChanging(value);
					this.SendPropertyChanging();
					this._orderQuantity = value;
					this.SendPropertyChanged("orderQuantity");
					this.OnorderQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dongia", DbType="Int NOT NULL")]
		public int dongia
		{
			get
			{
				return this._dongia;
			}
			set
			{
				if ((this._dongia != value))
				{
					this.OndongiaChanging(value);
					this.SendPropertyChanging();
					this._dongia = value;
					this.SendPropertyChanged("dongia");
					this.OndongiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tongtien", DbType="Int NOT NULL")]
		public int tongtien
		{
			get
			{
				return this._tongtien;
			}
			set
			{
				if ((this._tongtien != value))
				{
					this.OntongtienChanging(value);
					this.SendPropertyChanging();
					this._tongtien = value;
					this.SendPropertyChanged("tongtien");
					this.OntongtienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngaynhap", DbType="Date NOT NULL")]
		public System.DateTime ngaynhap
		{
			get
			{
				return this._ngaynhap;
			}
			set
			{
				if ((this._ngaynhap != value))
				{
					this.OnngaynhapChanging(value);
					this.SendPropertyChanging();
					this._ngaynhap = value;
					this.SendPropertyChanged("ngaynhap");
					this.OnngaynhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngaynhan", DbType="Date NOT NULL")]
		public System.DateTime ngaynhan
		{
			get
			{
				return this._ngaynhan;
			}
			set
			{
				if ((this._ngaynhan != value))
				{
					this.OnngaynhanChanging(value);
					this.SendPropertyChanging();
					this._ngaynhan = value;
					this.SendPropertyChanged("ngaynhan");
					this.OnngaynhanChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Order]")]
	public partial class Order : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _orderID;
		
		private System.Nullable<int> _cusID;
		
		private System.Nullable<int> _proID;
		
		private string _proName;
		
		private System.DateTime _orderDate;
		
		private int _proPrice;
		
		private int _orderQuantity;
		
		private int _orderMoney;
		
		private System.Nullable<int> _empID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnorderIDChanging(int value);
    partial void OnorderIDChanged();
    partial void OncusIDChanging(System.Nullable<int> value);
    partial void OncusIDChanged();
    partial void OnproIDChanging(System.Nullable<int> value);
    partial void OnproIDChanged();
    partial void OnproNameChanging(string value);
    partial void OnproNameChanged();
    partial void OnorderDateChanging(System.DateTime value);
    partial void OnorderDateChanged();
    partial void OnproPriceChanging(int value);
    partial void OnproPriceChanged();
    partial void OnorderQuantityChanging(int value);
    partial void OnorderQuantityChanged();
    partial void OnorderMoneyChanging(int value);
    partial void OnorderMoneyChanged();
    partial void OnempIDChanging(System.Nullable<int> value);
    partial void OnempIDChanged();
    #endregion
		
		public Order()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_orderID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int orderID
		{
			get
			{
				return this._orderID;
			}
			set
			{
				if ((this._orderID != value))
				{
					this.OnorderIDChanging(value);
					this.SendPropertyChanging();
					this._orderID = value;
					this.SendPropertyChanged("orderID");
					this.OnorderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cusID", DbType="Int")]
		public System.Nullable<int> cusID
		{
			get
			{
				return this._cusID;
			}
			set
			{
				if ((this._cusID != value))
				{
					this.OncusIDChanging(value);
					this.SendPropertyChanging();
					this._cusID = value;
					this.SendPropertyChanged("cusID");
					this.OncusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proID", DbType="Int")]
		public System.Nullable<int> proID
		{
			get
			{
				return this._proID;
			}
			set
			{
				if ((this._proID != value))
				{
					this.OnproIDChanging(value);
					this.SendPropertyChanging();
					this._proID = value;
					this.SendPropertyChanged("proID");
					this.OnproIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string proName
		{
			get
			{
				return this._proName;
			}
			set
			{
				if ((this._proName != value))
				{
					this.OnproNameChanging(value);
					this.SendPropertyChanging();
					this._proName = value;
					this.SendPropertyChanged("proName");
					this.OnproNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_orderDate", DbType="Date NOT NULL")]
		public System.DateTime orderDate
		{
			get
			{
				return this._orderDate;
			}
			set
			{
				if ((this._orderDate != value))
				{
					this.OnorderDateChanging(value);
					this.SendPropertyChanging();
					this._orderDate = value;
					this.SendPropertyChanged("orderDate");
					this.OnorderDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proPrice", DbType="Int NOT NULL")]
		public int proPrice
		{
			get
			{
				return this._proPrice;
			}
			set
			{
				if ((this._proPrice != value))
				{
					this.OnproPriceChanging(value);
					this.SendPropertyChanging();
					this._proPrice = value;
					this.SendPropertyChanged("proPrice");
					this.OnproPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_orderQuantity", DbType="Int NOT NULL")]
		public int orderQuantity
		{
			get
			{
				return this._orderQuantity;
			}
			set
			{
				if ((this._orderQuantity != value))
				{
					this.OnorderQuantityChanging(value);
					this.SendPropertyChanging();
					this._orderQuantity = value;
					this.SendPropertyChanged("orderQuantity");
					this.OnorderQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_orderMoney", DbType="Int NOT NULL")]
		public int orderMoney
		{
			get
			{
				return this._orderMoney;
			}
			set
			{
				if ((this._orderMoney != value))
				{
					this.OnorderMoneyChanging(value);
					this.SendPropertyChanging();
					this._orderMoney = value;
					this.SendPropertyChanged("orderMoney");
					this.OnorderMoneyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_empID", DbType="Int")]
		public System.Nullable<int> empID
		{
			get
			{
				return this._empID;
			}
			set
			{
				if ((this._empID != value))
				{
					this.OnempIDChanging(value);
					this.SendPropertyChanging();
					this._empID = value;
					this.SendPropertyChanged("empID");
					this.OnempIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Producers")]
	public partial class Producer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _proProducer;
		
		private string _proProducerName;
		
		private string _proPhone;
		
		private string _proEmail;
		
		private string _proAddress;
		
		private EntityRef<ProducerType> _ProducerType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnproProducerChanging(int value);
    partial void OnproProducerChanged();
    partial void OnproProducerNameChanging(string value);
    partial void OnproProducerNameChanged();
    partial void OnproPhoneChanging(string value);
    partial void OnproPhoneChanged();
    partial void OnproEmailChanging(string value);
    partial void OnproEmailChanged();
    partial void OnproAddressChanging(string value);
    partial void OnproAddressChanged();
    #endregion
		
		public Producer()
		{
			this._ProducerType = default(EntityRef<ProducerType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proProducer", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int proProducer
		{
			get
			{
				return this._proProducer;
			}
			set
			{
				if ((this._proProducer != value))
				{
					if (this._ProducerType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproProducerChanging(value);
					this.SendPropertyChanging();
					this._proProducer = value;
					this.SendPropertyChanged("proProducer");
					this.OnproProducerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proProducerName", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string proProducerName
		{
			get
			{
				return this._proProducerName;
			}
			set
			{
				if ((this._proProducerName != value))
				{
					this.OnproProducerNameChanging(value);
					this.SendPropertyChanging();
					this._proProducerName = value;
					this.SendPropertyChanged("proProducerName");
					this.OnproProducerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proPhone", DbType="NVarChar(100)")]
		public string proPhone
		{
			get
			{
				return this._proPhone;
			}
			set
			{
				if ((this._proPhone != value))
				{
					this.OnproPhoneChanging(value);
					this.SendPropertyChanging();
					this._proPhone = value;
					this.SendPropertyChanged("proPhone");
					this.OnproPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proEmail", DbType="NVarChar(100)")]
		public string proEmail
		{
			get
			{
				return this._proEmail;
			}
			set
			{
				if ((this._proEmail != value))
				{
					this.OnproEmailChanging(value);
					this.SendPropertyChanging();
					this._proEmail = value;
					this.SendPropertyChanged("proEmail");
					this.OnproEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proAddress", DbType="NVarChar(100)")]
		public string proAddress
		{
			get
			{
				return this._proAddress;
			}
			set
			{
				if ((this._proAddress != value))
				{
					this.OnproAddressChanging(value);
					this.SendPropertyChanging();
					this._proAddress = value;
					this.SendPropertyChanged("proAddress");
					this.OnproAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProducerType_Producer", Storage="_ProducerType", ThisKey="proProducer", OtherKey="proProducer", IsForeignKey=true)]
		public ProducerType ProducerType
		{
			get
			{
				return this._ProducerType.Entity;
			}
			set
			{
				ProducerType previousValue = this._ProducerType.Entity;
				if (((previousValue != value) 
							|| (this._ProducerType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProducerType.Entity = null;
						previousValue.Producers.Remove(this);
					}
					this._ProducerType.Entity = value;
					if ((value != null))
					{
						value.Producers.Add(this);
						this._proProducer = value.proProducer;
					}
					else
					{
						this._proProducer = default(int);
					}
					this.SendPropertyChanged("ProducerType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProducerType")]
	public partial class ProducerType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _proProducer;
		
		private string _proProducerName;
		
		private EntitySet<Producer> _Producers;
		
		private EntitySet<Product> _Products;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnproProducerChanging(int value);
    partial void OnproProducerChanged();
    partial void OnproProducerNameChanging(string value);
    partial void OnproProducerNameChanged();
    #endregion
		
		public ProducerType()
		{
			this._Producers = new EntitySet<Producer>(new Action<Producer>(this.attach_Producers), new Action<Producer>(this.detach_Producers));
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proProducer", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int proProducer
		{
			get
			{
				return this._proProducer;
			}
			set
			{
				if ((this._proProducer != value))
				{
					this.OnproProducerChanging(value);
					this.SendPropertyChanging();
					this._proProducer = value;
					this.SendPropertyChanged("proProducer");
					this.OnproProducerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proProducerName", DbType="NVarChar(50)")]
		public string proProducerName
		{
			get
			{
				return this._proProducerName;
			}
			set
			{
				if ((this._proProducerName != value))
				{
					this.OnproProducerNameChanging(value);
					this.SendPropertyChanging();
					this._proProducerName = value;
					this.SendPropertyChanged("proProducerName");
					this.OnproProducerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProducerType_Producer", Storage="_Producers", ThisKey="proProducer", OtherKey="proProducer")]
		public EntitySet<Producer> Producers
		{
			get
			{
				return this._Producers;
			}
			set
			{
				this._Producers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProducerType_Product", Storage="_Products", ThisKey="proProducer", OtherKey="proProducer")]
		public EntitySet<Product> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Producers(Producer entity)
		{
			this.SendPropertyChanging();
			entity.ProducerType = this;
		}
		
		private void detach_Producers(Producer entity)
		{
			this.SendPropertyChanging();
			entity.ProducerType = null;
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.ProducerType = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.ProducerType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Product")]
	public partial class Product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _proID;
		
		private string _proName;
		
		private System.Nullable<int> _proPrice;
		
		private string _proPhoto;
		
		private System.Nullable<int> _proType;
		
		private System.Nullable<int> _proStatus;
		
		private System.Nullable<int> _proProducer;
		
		private System.Nullable<int> _proQuantity;
		
		private EntitySet<Cart> _Carts;
		
		private EntityRef<ProducerType> _ProducerType;
		
		private EntityRef<ProductType> _ProductType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnproIDChanging(int value);
    partial void OnproIDChanged();
    partial void OnproNameChanging(string value);
    partial void OnproNameChanged();
    partial void OnproPriceChanging(System.Nullable<int> value);
    partial void OnproPriceChanged();
    partial void OnproPhotoChanging(string value);
    partial void OnproPhotoChanged();
    partial void OnproTypeChanging(System.Nullable<int> value);
    partial void OnproTypeChanged();
    partial void OnproStatusChanging(System.Nullable<int> value);
    partial void OnproStatusChanged();
    partial void OnproProducerChanging(System.Nullable<int> value);
    partial void OnproProducerChanged();
    partial void OnproQuantityChanging(System.Nullable<int> value);
    partial void OnproQuantityChanged();
    #endregion
		
		public Product()
		{
			this._Carts = new EntitySet<Cart>(new Action<Cart>(this.attach_Carts), new Action<Cart>(this.detach_Carts));
			this._ProducerType = default(EntityRef<ProducerType>);
			this._ProductType = default(EntityRef<ProductType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int proID
		{
			get
			{
				return this._proID;
			}
			set
			{
				if ((this._proID != value))
				{
					this.OnproIDChanging(value);
					this.SendPropertyChanging();
					this._proID = value;
					this.SendPropertyChanged("proID");
					this.OnproIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proName", DbType="NVarChar(MAX)")]
		public string proName
		{
			get
			{
				return this._proName;
			}
			set
			{
				if ((this._proName != value))
				{
					this.OnproNameChanging(value);
					this.SendPropertyChanging();
					this._proName = value;
					this.SendPropertyChanged("proName");
					this.OnproNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proPrice", DbType="Int")]
		public System.Nullable<int> proPrice
		{
			get
			{
				return this._proPrice;
			}
			set
			{
				if ((this._proPrice != value))
				{
					this.OnproPriceChanging(value);
					this.SendPropertyChanging();
					this._proPrice = value;
					this.SendPropertyChanged("proPrice");
					this.OnproPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proPhoto", DbType="Char(100)")]
		public string proPhoto
		{
			get
			{
				return this._proPhoto;
			}
			set
			{
				if ((this._proPhoto != value))
				{
					this.OnproPhotoChanging(value);
					this.SendPropertyChanging();
					this._proPhoto = value;
					this.SendPropertyChanged("proPhoto");
					this.OnproPhotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proType", DbType="Int")]
		public System.Nullable<int> proType
		{
			get
			{
				return this._proType;
			}
			set
			{
				if ((this._proType != value))
				{
					if (this._ProductType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproTypeChanging(value);
					this.SendPropertyChanging();
					this._proType = value;
					this.SendPropertyChanged("proType");
					this.OnproTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proStatus", DbType="Int")]
		public System.Nullable<int> proStatus
		{
			get
			{
				return this._proStatus;
			}
			set
			{
				if ((this._proStatus != value))
				{
					this.OnproStatusChanging(value);
					this.SendPropertyChanging();
					this._proStatus = value;
					this.SendPropertyChanged("proStatus");
					this.OnproStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proProducer", DbType="Int")]
		public System.Nullable<int> proProducer
		{
			get
			{
				return this._proProducer;
			}
			set
			{
				if ((this._proProducer != value))
				{
					if (this._ProducerType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproProducerChanging(value);
					this.SendPropertyChanging();
					this._proProducer = value;
					this.SendPropertyChanged("proProducer");
					this.OnproProducerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proQuantity", DbType="Int")]
		public System.Nullable<int> proQuantity
		{
			get
			{
				return this._proQuantity;
			}
			set
			{
				if ((this._proQuantity != value))
				{
					this.OnproQuantityChanging(value);
					this.SendPropertyChanging();
					this._proQuantity = value;
					this.SendPropertyChanged("proQuantity");
					this.OnproQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Cart", Storage="_Carts", ThisKey="proID", OtherKey="proID")]
		public EntitySet<Cart> Carts
		{
			get
			{
				return this._Carts;
			}
			set
			{
				this._Carts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProducerType_Product", Storage="_ProducerType", ThisKey="proProducer", OtherKey="proProducer", IsForeignKey=true)]
		public ProducerType ProducerType
		{
			get
			{
				return this._ProducerType.Entity;
			}
			set
			{
				ProducerType previousValue = this._ProducerType.Entity;
				if (((previousValue != value) 
							|| (this._ProducerType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProducerType.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._ProducerType.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._proProducer = value.proProducer;
					}
					else
					{
						this._proProducer = default(Nullable<int>);
					}
					this.SendPropertyChanged("ProducerType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductType_Product", Storage="_ProductType", ThisKey="proType", OtherKey="proType", IsForeignKey=true)]
		public ProductType ProductType
		{
			get
			{
				return this._ProductType.Entity;
			}
			set
			{
				ProductType previousValue = this._ProductType.Entity;
				if (((previousValue != value) 
							|| (this._ProductType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductType.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._ProductType.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._proType = value.proType;
					}
					else
					{
						this._proType = default(Nullable<int>);
					}
					this.SendPropertyChanged("ProductType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Carts(Cart entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_Carts(Cart entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
	}
}
#pragma warning restore 1591
